# Keycloak Enterprise IAM Deployment
# AML-KYC Agent Production Identity & Access Management

apiVersion: v1
kind: Namespace
metadata:
  name: keycloak-system
  labels:
    name: keycloak-system
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/component: identity-management
    app.kubernetes.io/part-of: aml-kyc-agent
    security.aml-advisory.company.com/iam: "true"
  annotations:
    description: "Keycloak system namespace for enterprise identity and access management"
    security.aml-advisory.company.com/compliance: "nist,sox,gdpr,iso27001"
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: keycloak-quota
  namespace: keycloak-system
spec:
  hard:
    requests.cpu: "4"
    requests.memory: 8Gi
    limits.cpu: "8"
    limits.memory: 16Gi
    pods: "20"
    services: "10"
    secrets: "20"
    configmaps: "20"
---
apiVersion: v1
kind: LimitRange
metadata:
  name: keycloak-limits
  namespace: keycloak-system
spec:
  limits:
  - default:
      cpu: "2"
      memory: 4Gi
    defaultRequest:
      cpu: "500m"
      memory: 1Gi
    type: Container
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: keycloak
  namespace: keycloak-system
  labels:
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/component: identity-management
    app.kubernetes.io/part-of: aml-kyc-agent
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: keycloak
  labels:
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/component: identity-management
    app.kubernetes.io/part-of: aml-kyc-agent
rules:
- apiGroups: [""]
  resources: ["secrets", "configmaps"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: keycloak
  labels:
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/component: identity-management
    app.kubernetes.io/part-of: aml-kyc-agent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: keycloak
subjects:
- kind: ServiceAccount
  name: keycloak
  namespace: keycloak-system
---
apiVersion: v1
kind: Secret
metadata:
  name: keycloak-db-secret
  namespace: keycloak-system
  labels:
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/component: identity-management
    app.kubernetes.io/part-of: aml-kyc-agent
type: Opaque
data:
  # Base64 encoded secrets - replace with actual values
  username: a2V5Y2xvYWs=  # keycloak
  password: cGFzc3dvcmQxMjM=  # password123
---
apiVersion: v1
kind: Secret
metadata:
  name: keycloak-admin-secret
  namespace: keycloak-system
  labels:
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/component: identity-management
    app.kubernetes.io/part-of: aml-kyc-agent
type: Opaque
data:
  # Base64 encoded secrets - replace with actual values
  username: YWRtaW4=  # admin
  password: YWRtaW5wYXNzd29yZA==  # adminpassword
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: keycloak-config
  namespace: keycloak-system
  labels:
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/component: identity-management
    app.kubernetes.io/part-of: aml-kyc-agent
data:
  KC_DB: "postgres"
  KC_DB_URL: "jdbc:postgresql://postgres:5432/keycloak"
  KC_DB_USERNAME: "keycloak"
  KC_DB_SCHEMA: "public"
  KC_HOSTNAME: "iam.internal.company.com"
  KC_HOSTNAME_PORT: "443"
  KC_HOSTNAME_STRICT: "true"
  KC_HOSTNAME_STRICT_HTTPS: "true"
  KC_HTTP_ENABLED: "false"
  KC_HTTPS_CERTIFICATE_FILE: "/opt/keycloak/conf/server.crt"
  KC_HTTPS_CERTIFICATE_KEY_FILE: "/opt/keycloak/conf/server.key"
  KC_HTTPS_PORT: "8443"
  KC_PROXY: "edge"
  KC_LOG_LEVEL: "INFO"
  KC_LOG_CONSOLE_COLOR: "false"
  KC_LOG_CONSOLE_FORMAT: "json"
  KC_LOG_FILE: "/opt/keycloak/logs/keycloak.log"
  KC_LOG_FILE_FORMAT: "json"
  KC_CACHE: "ispn"
  KC_CACHE_STACK: "kubernetes"
  KC_HEALTH_ENABLED: "true"
  KC_METRICS_ENABLED: "true"
  KC_METRICS_HTTP_ENABLED: "true"
  KC_METRICS_HTTP_PORT: "9000"
  KC_SPI_THEME_STATIC_MAX_AGE: "2592000"
  KC_SPI_THEME_CACHE_THEMES: "true"
  KC_SPI_THEME_CACHE_TEMPLATES: "true"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: keycloak-data
  namespace: keycloak-system
  labels:
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/component: identity-management
    app.kubernetes.io/part-of: aml-kyc-agent
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  storageClassName: fast-ssd
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: keycloak
  namespace: keycloak-system
  labels:
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/component: identity-management
    app.kubernetes.io/part-of: aml-kyc-agent
spec:
  serviceName: keycloak
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: keycloak
  template:
    metadata:
      labels:
        app.kubernetes.io/name: keycloak
        app.kubernetes.io/component: identity-management
        app.kubernetes.io/part-of: aml-kyc-agent
    spec:
      serviceAccountName: keycloak
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: keycloak
        image: quay.io/keycloak/keycloak:22.0.0
        imagePullPolicy: IfNotPresent
        args:
        - start
        - --optimized
        - --hostname-strict=true
        - --hostname-strict-https=true
        - --proxy=edge
        - --http-enabled=false
        - --https-certificate-file=/opt/keycloak/conf/server.crt
        - --https-certificate-key-file=/opt/keycloak/conf/server.key
        - --https-port=8443
        - --log-level=INFO
        - --log-console-color=false
        - --log-console-format=json
        - --log-file=/opt/keycloak/logs/keycloak.log
        - --log-file-format=json
        - --cache=ispn
        - --cache-stack=kubernetes
        - --health-enabled=true
        - --metrics-enabled=true
        - --metrics-http-enabled=true
        - --metrics-http-port=9000
        - --spi-theme-static-max-age=2592000
        - --spi-theme-cache-themes=true
        - --spi-theme-cache-templates=true
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: https
          containerPort: 8443
          protocol: TCP
        - name: metrics
          containerPort: 9000
          protocol: TCP
        env:
        - name: KEYCLOAK_ADMIN
          valueFrom:
            secretKeyRef:
              name: keycloak-admin-secret
              key: username
        - name: KEYCLOAK_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak-admin-secret
              key: password
        - name: KC_DB
          value: "postgres"
        - name: KC_DB_URL
          value: "jdbc:postgresql://postgres:5432/keycloak"
        - name: KC_DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: keycloak-db-secret
              key: username
        - name: KC_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak-db-secret
              key: password
        - name: KC_DB_SCHEMA
          value: "public"
        - name: KC_HOSTNAME
          value: "iam.internal.company.com"
        - name: KC_HOSTNAME_PORT
          value: "443"
        - name: KC_HOSTNAME_STRICT
          value: "true"
        - name: KC_HOSTNAME_STRICT_HTTPS
          value: "true"
        - name: KC_HTTP_ENABLED
          value: "false"
        - name: KC_HTTPS_CERTIFICATE_FILE
          value: "/opt/keycloak/conf/server.crt"
        - name: KC_HTTPS_CERTIFICATE_KEY_FILE
          value: "/opt/keycloak/conf/server.key"
        - name: KC_HTTPS_PORT
          value: "8443"
        - name: KC_PROXY
          value: "edge"
        - name: KC_LOG_LEVEL
          value: "INFO"
        - name: KC_LOG_CONSOLE_COLOR
          value: "false"
        - name: KC_LOG_CONSOLE_FORMAT
          value: "json"
        - name: KC_LOG_FILE
          value: "/opt/keycloak/logs/keycloak.log"
        - name: KC_LOG_FILE_FORMAT
          value: "json"
        - name: KC_CACHE
          value: "ispn"
        - name: KC_CACHE_STACK
          value: "kubernetes"
        - name: KC_HEALTH_ENABLED
          value: "true"
        - name: KC_METRICS_ENABLED
          value: "true"
        - name: KC_METRICS_HTTP_ENABLED
          value: "true"
        - name: KC_METRICS_HTTP_PORT
          value: "9000"
        - name: KC_SPI_THEME_STATIC_MAX_AGE
          value: "2592000"
        - name: KC_SPI_THEME_CACHE_THEMES
          value: "true"
        - name: KC_SPI_THEME_CACHE_TEMPLATES
          value: "true"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: keycloak-data
          mountPath: /opt/keycloak/data
        - name: keycloak-logs
          mountPath: /opt/keycloak/logs
        - name: keycloak-conf
          mountPath: /opt/keycloak/conf
        - name: keycloak-tmp
          mountPath: /tmp
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2
            memory: 4Gi
        livenessProbe:
          httpGet:
            path: /health/live
            port: 9000
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 9000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          capabilities:
            drop:
            - ALL
      volumes:
      - name: keycloak-data
        persistentVolumeClaim:
          claimName: keycloak-data
      - name: keycloak-logs
        emptyDir: {}
      - name: keycloak-conf
        emptyDir: {}
      - name: keycloak-tmp
        emptyDir: {}
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - keycloak
              topologyKey: kubernetes.io/hostname
  volumeClaimTemplates:
  - metadata:
      name: keycloak-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 50Gi
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak
  namespace: keycloak-system
  labels:
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/component: identity-management
    app.kubernetes.io/part-of: aml-kyc-agent
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  - name: https
    port: 8443
    targetPort: 8443
    protocol: TCP
  - name: metrics
    port: 9000
    targetPort: 9000
    protocol: TCP
  selector:
    app.kubernetes.io/name: keycloak
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak-headless
  namespace: keycloak-system
  labels:
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/component: identity-management
    app.kubernetes.io/part-of: aml-kyc-agent
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  - name: https
    port: 8443
    targetPort: 8443
    protocol: TCP
  - name: metrics
    port: 9000
    targetPort: 9000
    protocol: TCP
  selector:
    app.kubernetes.io/name: keycloak
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: keycloak-ingress
  namespace: keycloak-system
  labels:
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/component: identity-management
    app.kubernetes.io/part-of: aml-kyc-agent
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - iam.internal.company.com
    secretName: keycloak-tls
  rules:
  - host: iam.internal.company.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: keycloak
            port:
              number: 8443
