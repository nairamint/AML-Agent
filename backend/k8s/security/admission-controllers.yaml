# Production Kubernetes Security Policies - Admission Controllers and Webhooks
# Comprehensive admission control for AML-KYC Agent deployment

---
# Validating Admission Webhook for AML Security
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionWebhook
metadata:
  name: aml-security-validator
  labels:
    app.kubernetes.io/name: aml-security-validator
    app.kubernetes.io/component: security
    security.aml.io/compliance: "nist-csf"
webhooks:
  - name: aml-security-validator.aml.io
    clientConfig:
      service:
        name: aml-security-validator
        namespace: aml-kyc-agent
        path: "/validate"
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["apps"]
        apiVersions: ["v1"]
        resources: ["deployments", "statefulsets", "daemonsets"]
      - operations: ["CREATE", "UPDATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["pods"]
    failurePolicy: Fail
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]

---
# Mutating Admission Webhook for AML Security
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingAdmissionWebhook
metadata:
  name: aml-security-mutator
  labels:
    app.kubernetes.io/name: aml-security-mutator
    app.kubernetes.io/component: security
    security.aml.io/compliance: "nist-csf"
webhooks:
  - name: aml-security-mutator.aml.io
    clientConfig:
      service:
        name: aml-security-mutator
        namespace: aml-kyc-agent
        path: "/mutate"
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["apps"]
        apiVersions: ["v1"]
        resources: ["deployments", "statefulsets", "daemonsets"]
      - operations: ["CREATE", "UPDATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["pods"]
    failurePolicy: Fail
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]

---
# Validating Admission Webhook for Network Policies
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionWebhook
metadata:
  name: aml-network-policy-validator
  labels:
    app.kubernetes.io/name: aml-network-policy-validator
    app.kubernetes.io/component: security
    security.aml.io/compliance: "nist-csf"
webhooks:
  - name: aml-network-policy-validator.aml.io
    clientConfig:
      service:
        name: aml-network-policy-validator
        namespace: aml-kyc-agent
        path: "/validate-network-policy"
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["networking.k8s.io"]
        apiVersions: ["v1"]
        resources: ["networkpolicies"]
    failurePolicy: Fail
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]

---
# Validating Admission Webhook for RBAC
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionWebhook
metadata:
  name: aml-rbac-validator
  labels:
    app.kubernetes.io/name: aml-rbac-validator
    app.kubernetes.io/component: security
    security.aml.io/compliance: "nist-csf"
webhooks:
  - name: aml-rbac-validator.aml.io
    clientConfig:
      service:
        name: aml-rbac-validator
        namespace: aml-kyc-agent
        path: "/validate-rbac"
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["rbac.authorization.k8s.io"]
        apiVersions: ["v1"]
        resources: ["roles", "rolebindings", "clusterroles", "clusterrolebindings"]
    failurePolicy: Fail
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]

---
# Validating Admission Webhook for Secrets
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionWebhook
metadata:
  name: aml-secrets-validator
  labels:
    app.kubernetes.io/name: aml-secrets-validator
    app.kubernetes.io/component: security
    security.aml.io/compliance: "nist-csf"
webhooks:
  - name: aml-secrets-validator.aml.io
    clientConfig:
      service:
        name: aml-secrets-validator
        namespace: aml-kyc-agent
        path: "/validate-secrets"
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["secrets"]
    failurePolicy: Fail
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]

---
# Validating Admission Webhook for ConfigMaps
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionWebhook
metadata:
  name: aml-configmaps-validator
  labels:
    app.kubernetes.io/name: aml-configmaps-validator
    app.kubernetes.io/component: security
    security.aml.io/compliance: "nist-csf"
webhooks:
  - name: aml-configmaps-validator.aml.io
    clientConfig:
      service:
        name: aml-configmaps-validator
        namespace: aml-kyc-agent
        path: "/validate-configmaps"
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["configmaps"]
    failurePolicy: Fail
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]

---
# Validating Admission Webhook for Services
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionWebhook
metadata:
  name: aml-services-validator
  labels:
    app.kubernetes.io/name: aml-services-validator
    app.kubernetes.io/component: security
    security.aml.io/compliance: "nist-csf"
webhooks:
  - name: aml-services-validator.aml.io
    clientConfig:
      service:
        name: aml-services-validator
        namespace: aml-kyc-agent
        path: "/validate-services"
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["services"]
    failurePolicy: Fail
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]

---
# Validating Admission Webhook for Ingresses
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionWebhook
metadata:
  name: aml-ingress-validator
  labels:
    app.kubernetes.io/name: aml-ingress-validator
    app.kubernetes.io/component: security
    security.aml.io/compliance: "nist-csf"
webhooks:
  - name: aml-ingress-validator.aml.io
    clientConfig:
      service:
        name: aml-ingress-validator
        namespace: aml-kyc-agent
        path: "/validate-ingress"
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["networking.k8s.io", "extensions"]
        apiVersions: ["v1", "v1beta1"]
        resources: ["ingresses"]
    failurePolicy: Fail
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]

---
# Validating Admission Webhook for PersistentVolumes
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionWebhook
metadata:
  name: aml-pv-validator
  labels:
    app.kubernetes.io/name: aml-pv-validator
    app.kubernetes.io/component: security
    security.aml.io/compliance: "nist-csf"
webhooks:
  - name: aml-pv-validator.aml.io
    clientConfig:
      service:
        name: aml-pv-validator
        namespace: aml-kyc-agent
        path: "/validate-pv"
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["persistentvolumes", "persistentvolumeclaims"]
    failurePolicy: Fail
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]

---
# Validating Admission Webhook for Namespaces
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionWebhook
metadata:
  name: aml-namespace-validator
  labels:
    app.kubernetes.io/name: aml-namespace-validator
    app.kubernetes.io/component: security
    security.aml.io/compliance: "nist-csf"
webhooks:
  - name: aml-namespace-validator.aml.io
    clientConfig:
      service:
        name: aml-namespace-validator
        namespace: aml-kyc-agent
        path: "/validate-namespace"
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["namespaces"]
    failurePolicy: Fail
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
